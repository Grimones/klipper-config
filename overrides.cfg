[include orbiter_sensor.cfg]

#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
# [gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

[extruder]
control: pid

# sensor_type: ATC Semitec 104NT-4-R025H42G

# sensor_type: PT1000
# pullup_resistor: 1000
# PT1000 enclosed, heated chamber, target 240
# pid_kp: 27.722
# pid_ki: 3.080
# pid_kd: 62.376
# PT1000 enclosed, no heated chamber, target 250
# pid_kp: 29.123
# pid_ki: 3.530
# pid_kd: 60.066

sensor_type: MAX31865
sensor_pin: toolhead:PT100
spi_bus: spi2
rtd_reference_r: 430
pid_kp: 25.925
pid_ki: 2.368
pid_kd: 70.969

microsteps: 64
# Moons CW2
# rotation_distance: 22.951098
# Orbiter
full_steps_per_rotation: 200
rotation_distance: 4.683

nozzle_diameter: 0.400
max_extrude_only_distance: 500
max_extrude_only_velocity: 120
max_extrude_cross_section: 5

min_extrude_temp: 200
min_temp: 0
max_temp: 320

pressure_advance: 0.03
pressure_advance_smooth_time: 0.02

[heater_bed]
control: pid
pid_Kp: 38.823
pid_Ki: 0.275
pid_Kd: 1371.439
max_power: 0.6
sensor_type: ATC Semitec 104NT-4-R025H42G


#-------------------------#
#   Steppers              #
#-------------------------#

[stepper_x]
high_precision_step_compress: True
dir_pin: !X_DIR
homing_speed: 90
microsteps: 64
position_min: 0
position_endstop: 303
position_max: 303

[stepper_y]
high_precision_step_compress: True
dir_pin: !Y_DIR
homing_speed: 90
microsteps: 64
# Yavoth
position_min: -6
position_endstop: 303
position_max: 303
# Stealthburner
# position_min: 0
# position_endstop: 308
# position_max: 308

[stepper_z]
dir_pin: !Z_DIR
position_max: 275
position_min: -10
microsteps: 64

[stepper_z1]
microsteps: 64

[stepper_z2]
dir_pin: !Z2_DIR
microsteps: 64

[stepper_z3]
microsteps: 64


#-------------------------#
#   Drivers               #
#-------------------------#

[tmc2209 extruder]
stealthchop_threshold: 0
interpolate: False
# Orbiter
run_current: 0.85
# Moons
# run_current: 0.55
[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg
# motor: moons-cse14hra1l410a
tuning_goal: performance

[tmc2209 stepper_x]
stealthchop_threshold: 0
interpolate: False
run_current: 1.1
home_current: 0.8
[autotune_tmc stepper_x]
motor: ldo-42sth48-2504ac
sg4_thrs: 100
tuning_goal: performance

[tmc2209 stepper_y]
stealthchop_threshold: 0
interpolate: False
run_current: 1.1
home_current: 0.8
[autotune_tmc stepper_y]
motor: ldo-42sth48-2504ac
sg4_thrs: 110
tuning_goal: performance

[tmc2209 stepper_z]
stealthchop_threshold: 0
interpolate: False
run_current: 1.0
[autotune_tmc stepper_z]
motor: omc-17hs19-2004s1
tuning_goal: performance

[tmc2209 stepper_z1]
stealthchop_threshold: 0
interpolate: False
run_current: 1.0
[autotune_tmc stepper_z1]
motor: omc-17hs19-2004s1
tuning_goal: performance

[tmc2209 stepper_z2]
stealthchop_threshold: 0
interpolate: False
run_current: 1.0
[autotune_tmc stepper_z2]
motor: omc-17hs19-2004s1
tuning_goal: performance

[tmc2209 stepper_z3]
stealthchop_threshold: 0
interpolate: False
run_current: 1.0
[autotune_tmc stepper_z3]
motor: omc-17hs19-2004s1
tuning_goal: performance


#-------------------------#
#   Hardware              #
#-------------------------#

[printer]
kinematics: corexy
max_velocity: 800
max_accel: 15000
max_z_velocity: 30
max_z_accel: 500
minimum_cruise_ratio: 0.5
square_corner_velocity: 5.0

[probe]
drop_first_result: True
# stealth_changer
z_offset: -0.700
# tap
# z_offset: -1.770

[temperature_sensor heater_bed_backup]
sensor_type: Generic 3950
sensor_pin: MCU_TH0
min_temp: 0
max_temp: 130

[temperature_sensor Chamber_Toolhead]
sensor_type: Generic 3950
sensor_pin: toolhead:CHAMBER_TEMPERATURE

[temperature_sensor CB2_temp]
sensor_type: temperature_host

[controller_fan electronics]
pin: CONTROLLER_FAN
cycle_time: 0.12
max_power: 1
kick_start_time: 0.5
fan_speed: 0.9
idle_timeout: 60
stepper: stepper_x, stepper_y

[controller_fan ssr]
pin: CONTROLLER_FAN2
cycle_time: 0.1
max_power: 1
kick_start_time: 0.5
fan_speed: 0.9
idle_timeout: 60
heater: heater_bed

[controller_fan stepper]
pin: STEPPER_FAN
max_power: 0.5
kick_start_time: 0.250
off_below: 0.30
stepper: stepper_x, stepper_y

#[heater_fan exhaust_fan]
##  Exhaust fan - FAN3
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

[output_pin ssr_relay]
pin: CB2:gpio8
value: 0

[output_pin caselight]
cycle_time: 0.0001

[adxl345]
axes_map: x,z,-y

#-------------------------#
#   Software              #
#-------------------------#

[shaketune]

# [settling_probe]
# settling_sample: True
#   Globally enable the throw-away settling sample. Default is 'False'.
#   Setting this to 'True' will enable the throw-away sample for all
#   commands/operations that perform Z probing (QGL, Z tilt, Bed Mesh,
#   Screw Tilt, etc.)

[input_shaper]
enabled_extruders: extruder
shaper_type: smooth_mzv
smoother_freq_x: 57.0
smoother_freq_y: 42.2

[bed_mesh]
speed: 600
horizontal_move_z: 5
mesh_min: 20, 20
mesh_max: 280, 280
probe_count: 9, 9
algorithm: bicubic
bicubic_tension: 0.2
mesh_pps: 2, 2
move_check_distance: 3
split_delta_z: 0.025
fade_target: 0
fade_start: 0.5
fade_end: 1.5
zero_reference_position: 152.5, 152.5

[quad_gantry_level]
gantry_corners:
    -60,-10
    360,370
points:
	50,25
	50,225
	250,225
	250,25
# points:
#     25,25
#     25,275
#     275,275
#     275,25
speed: 500
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075
adaptive_horizontal_move_z: True
min_horizontal_move_z: 5
max_adjust: 10

[resonance_tester]
accel_chip: adxl345
probe_points: 152.5, 152.5, 10


#-------------------------#
#   Macros                #
#-------------------------#

[gcode_macro ENABLE_SSR]
gcode:
  SET_PIN PIN=ssr_relay VALUE=1

[gcode_macro ENABLE_SSR_WITH_WAIT]
gcode:
  SET_PIN PIN=ssr_relay VALUE=1
  # Avoid delay when calling set bed temperature on second layer
  {% if printer.heater_bed.temperature >= printer.heater_bed.target * 0.9 %} # avoids not working on PID fluctuations
    G4 P1000
  {% endif %}

[gcode_macro DISABLE_SSR]
gcode:
  SET_PIN PIN=ssr_relay VALUE=0

[gcode_macro DISABLE_SSR_WITH_WAIT]
gcode:
  G4 P1000
  SET_PIN PIN=ssr_relay VALUE=0

[gcode_macro END_PRINT_RETRACT]
gcode:
  {% set MATERIAL = params.MATERIAL|default(printer["gcode_macro _USER_VARIABLES"].print_default_material)|string %} # Material type set in the slicer
  RESPOND MSG="End print retract. Material = {MATERIAL}"
  {% if MATERIAL in ["PETG", "PET", "PLA", "ABS" ] %}
    RESPOND MSG="Do end print retract. Material = {MATERIAL}"
    G1 E-15.0 F60
  {% elif MATERIAL == "PA" %}
    RESPOND MSG="Do end print extrude. Material = {MATERIAL}"
    G1 E10 F2100
  {% endif %}

[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
  {% if params.HEATER == "heater_bed" %}
    {% if params.TARGET is defined and params.TARGET|int > 0 %}
      ENABLE_SSR_WITH_WAIT
      _SET_HEATER_TEMPERATURE {rawparams}
    {% else %}
      _SET_HEATER_TEMPERATURE {rawparams}
      DISABLE_SSR_WITH_WAIT
    {% endif %}
  {% else %}
    _SET_HEATER_TEMPERATURE {rawparams}
  {% endif %}

[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
  _TURN_OFF_HEATERS
  DISABLE_SSR_WITH_WAIT

[gcode_macro M140]
rename_existing: M140.1
gcode:
  {% if params.S is defined and params.S|int > 0 %}
    ENABLE_SSR_WITH_WAIT
    M140.1 {rawparams}
  {% else %}
    M140.1 {rawparams}
    DISABLE_SSR_WITH_WAIT
  {% endif %}

[gcode_macro M190]
rename_existing: M190.1
gcode:
  {% if params.S is defined and params.S|int > 0 %}
    ENABLE_SSR_WITH_WAIT
    M190.1 {rawparams}
  {% else %}
    M190.1 {rawparams}
    DISABLE_SSR_WITH_WAIT
  {% endif %}

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}

    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}

    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}

        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED

    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }

    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %}
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}

        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}

        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}

        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro _LEDS_COLORS_DEFINITION]
variable_colors: {
        'logo': {
            'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},
            'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},
            'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},
            'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},
            'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},
            'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 1.0, 'g': 0.0, 'b': 1.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'printing': {'r': 1.0, 'g': 0.0, 'b': 1.0, 'w': 0.0},
            'done_printing': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},
            'standby': {'r': 0.01, 'g': 0.00, 'b': 0.01, 'w': 0.1},
            'error': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
        },
        'nozzle': {
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
            'standby': {'r': 0.6, 'g': 0.0, 'b': 0.6, 'w':0.0},
            'done_printing': {'r': 1.0, 'g': 1.0, 'b': 0.0, 'w': 1.0},
            'error': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
        },
        'thermal': {
            'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
        }
    }
gcode:
